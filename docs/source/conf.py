# -*- coding: utf-8 -*-
#
# voeventdb.remote documentation build configuration file, created by
# sphinx-quickstart on Thu Dec  3 16:15:54 2015.
#
# This file is execfile()d with the current directory set to its
# containing dir.
#
# Note that not all possible configuration values are present in this
# autogenerated file.
#
# All configuration values have a default; values that are commented out
# serve to show the default.

import sys
import os
import shlex

# If extensions (or modules to document with autodoc) are in another directory,
# add these directories to sys.path here.
rootdir = os.path.dirname(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))
print("Rootdir", rootdir)
sys.path.append(rootdir)

# -- General configuration ------------------------------------------------

# If your documentation needs a minimal Sphinx version, state it here.
# needs_sphinx = '1.0'

# Add any Sphinx extension module names here, as strings. They can be
# extensions coming with Sphinx (named 'sphinx.ext.*') or your custom
# ones.
extensions = [
    'sphinx.ext.autodoc',
    'sphinx.ext.doctest',
    'sphinx.ext.intersphinx',
    'sphinx.ext.viewcode',
]

# Add any paths that contain templates here, relative to this directory.
templates_path = ['_templates']

# The suffix(es) of source filenames.
# You can specify multiple suffix as a list of string:
# source_suffix = ['.rst', '.md']
source_suffix = '.rst'

# The encoding of source files.
# source_encoding = 'utf-8-sig'

# The master toctree document.
master_doc = 'index'

# General information about the project.
project = u'voeventdb.remote'
copyright = u'2015, Tim Staley'
author = u'Tim Staley'

# The version info for the project you're documenting, acts as replacement for
# |version| and |release|, also used in various other places throughout the
# built documents.
#
from voeventdb.remote import __version__, __versiondict__

version = __version__.split('+')[0]
if 'dirty' in version:
    version = version.rsplit('.', maxsplit=1)[0]
# The full version, including alpha/beta/rc tags.
release = __versiondict__['full-revisionid'][:8]

# The language for content autogenerated by Sphinx. Refer to documentation
# for a list of supported languages.
#
# This is also used if you do content translation via gettext catalogs.
# Usually you set "language" from the command line for these cases.
language = None


# List of patterns, relative to source directory, that match files and
# directories to ignore when looking for source files.
exclude_patterns = []

# The name of the Pygments (syntax highlighting) style to use.
pygments_style = 'sphinx'

# If true, `todo` and `todoList` produce output, else they produce nothing.
todo_include_todos = False


# -- Options for HTML output ----------------------------------------------

# The theme to use for HTML and HTML Help pages.  See the documentation for
# a list of builtin themes.
# html_theme = 'alabaster'
html_theme = "sphinx_rtd_theme"
html_show_sphinx = False

# If true, "(C) Copyright ..." is shown in the HTML footer. Default is True.
# html_show_copyright = True

# Output file base name for HTML help builder.
htmlhelp_basename = 'voeventdbremotedoc'

nitpicky = True

# Example configuration for intersphinx: refer to the Python standard library.
intersphinx_mapping = {
    # 'https://docs.python.org/': None,
    'voeventdb':('http://voeventdb.readthedocs.org/en/latest/', None)
}

from subprocess import check_call as sh
def convert_nb(nbpath, output_folder):
    basename = os.path.basename(nbpath)
    basename_stem = basename.rsplit('.',1)[0]
    # Execute the notebook
    sh(["jupyter", "nbconvert", "--to", "notebook",
        "--execute", "--inplace", nbpath])

    # Convert to .rst for Sphinx
    sh(["jupyter", "nbconvert", "--to", "rst", nbpath,
        "--output", str(os.path.join(output_folder, basename_stem+".rst")),
        ])

    # Clear notebook output
    sh(["jupyter", "nbconvert", "--to", "notebook", "--inplace",
        "--ClearOutputPreprocessor.enabled=True", nbpath])

import glob
notebooks = glob.glob('notebooks/*.ipynb')
print notebooks

for nb in notebooks:
    convert_nb(nb, output_folder='tutorial')